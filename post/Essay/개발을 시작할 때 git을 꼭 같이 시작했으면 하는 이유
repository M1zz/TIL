개발을 시작하면 반드시 접하게되는 단어들이 있습니다. 그 중 하나는 `git`입니다.
그렇다면 git을 왜 써야하고, 어느정도까지 써야하는 걸까요? 그에 대한 생각을 간단히 적어보겠습니다.

## git은 왜 써야 할까요?

git은 크게 2가지의 이유로 사용한다고 생각합니다.
- 버젼관리
- 협업도구

그래서 우리는 우리의 코드가 잘 못 되었거나 과거의 코드로 되돌릴 때, git을 씁니다.
예를 들면, 내가 작성했던 코드가 문제가 생겼을 때 과거로 돌아갈 수 있다면 얼마나 좋을까요?
하나하나 되돌리기를 하는 것이 아니라 특정의 시점으로 돌아갈 수 있다면 나의 실수를 만회하기에 좋겠죠?
여러분의 실수를 되돌리기 위해 git의 사용방법을 익혀두세요!

다른 개발자와 협업을 해야할 때 협업의 도구로서 git을 사용합니다. 개발을 혼자하는 개발자도 있지만 많은 개발자들이
하나의 프로덕트를 만들기 위해 협업을 하고 있습니다. 서로 일할 범위를 나누고 따로 작업한 다음에 하나로 합친다면,
일을 효율적으로 할 수 있고, 결과물도 더 빠르게 만들 수 있겠죠? 생산성을 높이기 위해 git을 사용하세요!


## git 어느정도까지 써야하는 걸까요?

왜 써야하는지 알았으니 그러면 얼마나 써야하는지 이야기 해봅시다.
먼저 버전관리를 하기 위해서라면, commit을 꼼꼼히 하고 해당 커밋 때로 돌아가는 방법을 알면 좋을 것 입니다.
아니면 다른 사람이 작업한 내용 중 일부 혹은 내가 과거에 작업한 내용을 살리기 위한 cherry-pick 등과 같은 기능들을 알면 유용하겠죠?

다른 사람들과 협업을 하려면, git-flow는 이헤하고 사용해야 합니다. 나 혼자 git에 commit, push, pull을 한다고 git을 사용할
줄 안다고 생각한다면, 실제 협업을 하면서 많은 어려움이 있을 것 입니다. 어느 브랜치에서 개발을 해야하고, 어느 브랜치로 merge를 해줘야 하는지
알고 있어야 합니다.

## 더 나은 개발을 위해서

개발자로 시작하면서 git을 왜 해야하는지, 얼마나 해야하는지는 잘 공감되지 못하고 있다는 생각을 했습니다. 그래서
처음에 개발을 시작하면서 같이 공부하면 좋은 예제와 영상을 준비했습니다.

같이 공부하고 마지막 영상까지 보시고 저에게 PR을 날려주세요!

https://www.youtube.com/watch?v=dd7EPJ__hBs&list=PL1PI2d-NlJ8u7Kkb7k5bbSTuxZay62g2F
